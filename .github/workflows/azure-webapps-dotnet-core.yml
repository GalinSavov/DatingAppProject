name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  AZURE_WEBAPP_NAME: dately-application  
  AZURE_WEBAPP_PACKAGE_PATH: '.'      
  DOTNET_VERSION: '9.x'                
  NODE_VERSION: '20.x'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up node.js
        uses: actions/setup-node@v3
        with: 
          node-version: ${{ env.NODE_VERSION }}

      - name: Install angular cli
        run: npm install -g @angular/cli@18

      - name: Install dependencies and build angular app
        run: |
          cd DatingApp/client
          npm install
          ng build
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build DatingApp/API/API.csproj --configuration Release

      - name: dotnet publish
        run: dotnet publish DatingApp/API/ -c Release

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: DatingApp/API/bin/Release/net9.0/publish

  deploy:
    permissions:
      contents: none
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
